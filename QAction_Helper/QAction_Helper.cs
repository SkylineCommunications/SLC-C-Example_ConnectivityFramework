// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 1 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int help_1 = 1;
	/// <summary>PID: 1 | Type: read</summary>
	public const int help = 1;
	/// <summary>PID: 50 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mode_50 = 50;
	/// <summary>PID: 50 | Type: read</summary>
	public const int mode = 50;
	/// <summary>PID: 51 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int inputselection_51 = 51;
	/// <summary>PID: 51 | Type: read</summary>
	public const int inputselection = 51;
	/// <summary>PID: 53 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int connectionfilter_53 = 53;
	/// <summary>PID: 53 | Type: read</summary>
	public const int connectionfilter = 53;
	/// <summary>PID: 97 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_keyinput_97 = 97;
	/// <summary>PID: 97 | Type: read</summary>
	public const int context_keyinput = 97;
	/// <summary>PID: 99 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_key_99 = 99;
	/// <summary>PID: 99 | Type: read</summary>
	public const int context_key = 99;
	/// <summary>PID: 151 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getinterfacesresult_151 = 151;
	/// <summary>PID: 151 | Type: read</summary>
	public const int getinterfacesresult = 151;
	/// <summary>PID: 152 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int propertynamegetinterfaces_152 = 152;
	/// <summary>PID: 152 | Type: read</summary>
	public const int propertynamegetinterfaces = 152;
	/// <summary>PID: 153 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int propertyvaluegetinterfaces_153 = 153;
	/// <summary>PID: 153 | Type: read</summary>
	public const int propertyvaluegetinterfaces = 153;
	/// <summary>PID: 998 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int allinputs_998 = 998;
	/// <summary>PID: 998 | Type: read</summary>
	public const int allinputs = 998;
	/// <summary>PID: 999 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int alloutputs_999 = 999;
	/// <summary>PID: 999 | Type: read</summary>
	public const int alloutputs = 999;
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int column_2002 = 2002;
	/// <summary>PID: 2002 | Type: read</summary>
	public const int column = 2002;
	/// <summary>PID: 63993 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapstartupelements_63993 = 63993;
	/// <summary>PID: 63993 | Type: read</summary>
	public const int mapstartupelements = 63993;
	/// <summary>PID: 63994 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapnewconnectionproperties_63994 = 63994;
	/// <summary>PID: 63994 | Type: read</summary>
	public const int mapnewconnectionproperties = 63994;
	/// <summary>PID: 63995 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapnewconnections_63995 = 63995;
	/// <summary>PID: 63995 | Type: read</summary>
	public const int mapnewconnections = 63995;
	/// <summary>PID: 63996 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapnewinterfaceproperties_63996 = 63996;
	/// <summary>PID: 63996 | Type: read</summary>
	public const int mapnewinterfaceproperties = 63996;
	/// <summary>PID: 63997 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapconnectionproperties_63997 = 63997;
	/// <summary>PID: 63997 | Type: read</summary>
	public const int mapconnectionproperties = 63997;
	/// <summary>PID: 63998 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapconnections_63998 = 63998;
	/// <summary>PID: 63998 | Type: read</summary>
	public const int mapconnections = 63998;
	/// <summary>PID: 63999 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mapinterfaceproperties_63999 = 63999;
	/// <summary>PID: 63999 | Type: read</summary>
	public const int mapinterfaceproperties = 63999;
	public class Write
	{
		/// <summary>PID: 52 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int buttonremovevirtualaconnections_52 = 52;
		/// <summary>PID: 52 | Type: write</summary>
		public const int buttonremovevirtualaconnections = 52;
		/// <summary>PID: 149 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pagebuttongetinterfaces_149 = 149;
		/// <summary>PID: 149 | Type: write</summary>
		public const int pagebuttongetinterfaces = 149;
		/// <summary>PID: 150 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int buttongetinterfacesfromdcf_150 = 150;
		/// <summary>PID: 150 | Type: write</summary>
		public const int buttongetinterfacesfromdcf = 150;
		/// <summary>PID: 210 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int buttonsaveuniquesource_210 = 210;
		/// <summary>PID: 210 | Type: write</summary>
		public const int buttonsaveuniquesource = 210;
		/// <summary>PID: 510 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int buttonsavedvedcf_510 = 510;
		/// <summary>PID: 510 | Type: write</summary>
		public const int buttonsavedvedcf = 510;
		/// <summary>PID: 1050 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mode_1050 = 1050;
		/// <summary>PID: 1050 | Type: write</summary>
		public const int mode = 1050;
		/// <summary>PID: 1051 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int inputselection_1051 = 1051;
		/// <summary>PID: 1051 | Type: write</summary>
		public const int inputselection = 1051;
		/// <summary>PID: 1053 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int connectionfilter_1053 = 1053;
		/// <summary>PID: 1053 | Type: write</summary>
		public const int connectionfilter = 1053;
		/// <summary>PID: 1100 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int driverinterfaces_contextmenu_1100 = 1100;
		/// <summary>PID: 1100 | Type: write</summary>
		public const int driverinterfaces_contextmenu = 1100;
		/// <summary>PID: 1114 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int driverinterfacesinterfacestate_1114 = 1114;
		/// <summary>PID: 1114 | Type: write</summary>
		public const int driverinterfacesinterfacestate = 1114;
		/// <summary>PID: 1115 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int driverinterfacesinterfacepropertya_1115 = 1115;
		/// <summary>PID: 1115 | Type: write</summary>
		public const int driverinterfacesinterfacepropertya = 1115;
		/// <summary>PID: 1116 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int driverinterfacesinterfacepropertyb_1116 = 1116;
		/// <summary>PID: 1116 | Type: write</summary>
		public const int driverinterfacesinterfacepropertyb = 1116;
		/// <summary>PID: 1152 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int propertynamegetinterfaces_1152 = 1152;
		/// <summary>PID: 1152 | Type: write</summary>
		public const int propertynamegetinterfaces = 1152;
		/// <summary>PID: 1153 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int propertyvaluegetinterfaces_1153 = 1153;
		/// <summary>PID: 1153 | Type: write</summary>
		public const int propertyvaluegetinterfaces = 1153;
		/// <summary>PID: 1200 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int uniquesourceconnections_contextmenu_1200 = 1200;
		/// <summary>PID: 1200 | Type: write</summary>
		public const int uniquesourceconnections_contextmenu = 1200;
		/// <summary>PID: 1202 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int uniquesourceconnectionsdestinationinterface_1202 = 1202;
		/// <summary>PID: 1202 | Type: write</summary>
		public const int uniquesourceconnectionsdestinationinterface = 1202;
		/// <summary>PID: 1500 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dvetable_contextmenu_1500 = 1500;
		/// <summary>PID: 1500 | Type: write</summary>
		public const int dvetable_contextmenu = 1500;
		/// <summary>PID: 1502 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dvetablevirtualelementname_1502 = 1502;
		/// <summary>PID: 1502 | Type: write</summary>
		public const int dvetablevirtualelementname = 1502;
		/// <summary>PID: 1503 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dvetablevirtualelementdestination_1503 = 1503;
		/// <summary>PID: 1503 | Type: write</summary>
		public const int dvetablevirtualelementdestination = 1503;
		/// <summary>PID: 2001 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int matrix_2001 = 2001;
		/// <summary>PID: 2001 | Type: write</summary>
		public const int matrix = 2001;
		/// <summary>PID: 2004 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int buttonfindinterface_2004 = 2004;
		/// <summary>PID: 2004 | Type: write</summary>
		public const int buttonfindinterface = 2004;
	}
	public class Driverinterfaces
	{
		/// <summary>PID: 100</summary>
		public const int tablePid = 100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 111</summary>
		public const int indexColumnPid = 111;
		public class Pid
		{
			/// <summary>PID: 111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfaceskey_111 = 111;
			/// <summary>PID: 111 | Type: read</summary>
			public const int driverinterfaceskey = 111;
			/// <summary>PID: 112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesdescription_112 = 112;
			/// <summary>PID: 112 | Type: read</summary>
			public const int driverinterfacesdescription = 112;
			/// <summary>PID: 113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacestype_113 = 113;
			/// <summary>PID: 113 | Type: read</summary>
			public const int driverinterfacestype = 113;
			/// <summary>PID: 114 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacestate_114 = 114;
			/// <summary>PID: 114 | Type: read</summary>
			public const int driverinterfacesinterfacestate = 114;
			/// <summary>PID: 115 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacepropertya_115 = 115;
			/// <summary>PID: 115 | Type: read</summary>
			public const int driverinterfacesinterfacepropertya = 115;
			/// <summary>PID: 116 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacepropertyb_116 = 116;
			/// <summary>PID: 116 | Type: read</summary>
			public const int driverinterfacesinterfacepropertyb = 116;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfaceskey_111 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int driverinterfaceskey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesdescription_112 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int driverinterfacesdescription = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacestype_113 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int driverinterfacestype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacestate_114 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int driverinterfacesinterfacestate = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacepropertya_115 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int driverinterfacesinterfacepropertya = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int driverinterfacesinterfacepropertyb_116 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int driverinterfacesinterfacepropertyb = 5;
		}
	}
	public class Uniquesourceconnections
	{
		/// <summary>PID: 200</summary>
		public const int tablePid = 200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 201</summary>
		public const int indexColumnPid = 201;
		public class Pid
		{
			/// <summary>PID: 201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int uniquesourceconnectionssourceinterface_201 = 201;
			/// <summary>PID: 201 | Type: read</summary>
			public const int uniquesourceconnectionssourceinterface = 201;
			/// <summary>PID: 202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int uniquesourceconnectionsdestinationinterface_202 = 202;
			/// <summary>PID: 202 | Type: read</summary>
			public const int uniquesourceconnectionsdestinationinterface = 202;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int uniquesourceconnectionssourceinterface_201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int uniquesourceconnectionssourceinterface = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int uniquesourceconnectionsdestinationinterface_202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int uniquesourceconnectionsdestinationinterface = 1;
		}
	}
	public class Dvetable
	{
		/// <summary>PID: 500</summary>
		public const int tablePid = 500;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 501</summary>
		public const int indexColumnPid = 501;
		public class Pid
		{
			/// <summary>PID: 501 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementkey_501 = 501;
			/// <summary>PID: 501 | Type: read</summary>
			public const int dvetablevirtualelementkey = 501;
			/// <summary>PID: 502 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementname_502 = 502;
			/// <summary>PID: 502 | Type: read</summary>
			public const int dvetablevirtualelementname = 502;
			/// <summary>PID: 503 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementdestination_503 = 503;
			/// <summary>PID: 503 | Type: read</summary>
			public const int dvetablevirtualelementdestination = 503;
			/// <summary>PID: 504 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementcolumn_504 = 504;
			/// <summary>PID: 504 | Type: read</summary>
			public const int dvetablevirtualelementcolumn = 504;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementkey_501 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int dvetablevirtualelementkey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementname_502 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int dvetablevirtualelementname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementdestination_503 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int dvetablevirtualelementdestination = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dvetablevirtualelementcolumn_504 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int dvetablevirtualelementcolumn = 3;
		}
	}
	public class Matrix
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		public class Pid
		{
			public class Write
			{
			}
		}
		public class Idx
		{
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object Buttonremovevirtualaconnections {get { return Protocol.GetParameter(52); }set { Protocol.SetParameter(52, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces... = Get Interfaces</summary>
	public System.Object Pagebuttongetinterfaces {get { return Protocol.GetParameter(149); }set { Protocol.SetParameter(149, value); }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object Buttongetinterfacesfromdcf {get { return Protocol.GetParameter(150); }set { Protocol.SetParameter(150, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsaveuniquesource {get { return Protocol.GetParameter(210); }set { Protocol.SetParameter(210, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsavedvedcf {get { return Protocol.GetParameter(510); }set { Protocol.SetParameter(510, value); }}
	/// <summary>PID: 1050  | Type: write | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	public System.Object Mode {get { return Protocol.GetParameter(1050); }set { Protocol.SetParameter(1050, value); }}
	/// <summary>PID: 1051  | Type: write | DISCREETS: Normal = 0, Crossed = 1</summary>
	public System.Object Inputselection {get { return Protocol.GetParameter(1051); }set { Protocol.SetParameter(1051, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	public System.Object Connectionfilter {get { return Protocol.GetParameter(1053); }set { Protocol.SetParameter(1053, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object Driverinterfaces_contextmenu {get { return Protocol.GetParameter(1100); }set { Protocol.SetParameter(1100, value); }}
	/// <summary>PID: 1114  | Type: write | DISCREETS: Down = 0, Up = 1</summary>
	public System.Object Driverinterfacesinterfacestate {get { return Protocol.GetParameter(1114); }set { Protocol.SetParameter(1114, value); }}
	/// <summary>PID: 1115  | Type: write</summary>
	public System.Object Driverinterfacesinterfacepropertya {get { return Protocol.GetParameter(1115); }set { Protocol.SetParameter(1115, value); }}
	/// <summary>PID: 1116  | Type: write</summary>
	public System.Object Driverinterfacesinterfacepropertyb {get { return Protocol.GetParameter(1116); }set { Protocol.SetParameter(1116, value); }}
	/// <summary>PID: 1152  | Type: write</summary>
	public System.Object Propertynamegetinterfaces {get { return Protocol.GetParameter(1152); }set { Protocol.SetParameter(1152, value); }}
	/// <summary>PID: 1153  | Type: write</summary>
	public System.Object Propertyvaluegetinterfaces {get { return Protocol.GetParameter(1153); }set { Protocol.SetParameter(1153, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu {get { return Protocol.GetParameter(1200); }set { Protocol.SetParameter(1200, value); }}
	/// <summary>PID: 1202  | Type: write</summary>
	public System.Object Uniquesourceconnectionsdestinationinterface {get { return Protocol.GetParameter(1202); }set { Protocol.SetParameter(1202, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object Dvetable_contextmenu {get { return Protocol.GetParameter(1500); }set { Protocol.SetParameter(1500, value); }}
	/// <summary>PID: 1502  | Type: write</summary>
	public System.Object Dvetablevirtualelementname {get { return Protocol.GetParameter(1502); }set { Protocol.SetParameter(1502, value); }}
	/// <summary>PID: 1503  | Type: write | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	public System.Object Dvetablevirtualelementdestination {get { return Protocol.GetParameter(1503); }set { Protocol.SetParameter(1503, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix {get { return Protocol.GetParameter(2001); }set { Protocol.SetParameter(2001, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Log Matrix Interface = Find</summary>
	public System.Object Buttonfindinterface {get { return Protocol.GetParameter(2004); }set { Protocol.SetParameter(2004, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 100</summary>
	DriverinterfacesQActionTable driverinterfaces { get; set; }
	/// <summary>PID: 200</summary>
	UniquesourceconnectionsQActionTable uniquesourceconnections { get; set; }
	/// <summary>PID: 500</summary>
	DvetableQActionTable dvetable { get; set; }
	/// <summary>PID: 2000</summary>
	MatrixQActionTable matrix { get; set; }
	object Help_1 { get; set; }
	object Help { get; set; }
	object Afterstartup_dummy { get; set; }
	object Mode_50 { get; set; }
	object Mode { get; set; }
	object Inputselection_51 { get; set; }
	object Inputselection { get; set; }
	object Buttonremovevirtualaconnections_52 { get; set; }
	object Buttonremovevirtualaconnections { get; set; }
	object Connectionfilter_53 { get; set; }
	object Connectionfilter { get; set; }
	object Context_keyinput_97 { get; set; }
	object Context_keyinput { get; set; }
	object Context_key_99 { get; set; }
	object Context_key { get; set; }
	object Driverinterfaceskey_111 { get; set; }
	object Driverinterfaceskey { get; set; }
	object Driverinterfacesdescription_112 { get; set; }
	object Driverinterfacesdescription { get; set; }
	object Driverinterfacestype_113 { get; set; }
	object Driverinterfacestype { get; set; }
	object Driverinterfacesinterfacestate_114 { get; set; }
	object Driverinterfacesinterfacestate { get; set; }
	object Driverinterfacesinterfacepropertya_115 { get; set; }
	object Driverinterfacesinterfacepropertya { get; set; }
	object Driverinterfacesinterfacepropertyb_116 { get; set; }
	object Driverinterfacesinterfacepropertyb { get; set; }
	object Pagebuttongetinterfaces_149 { get; set; }
	object Pagebuttongetinterfaces { get; set; }
	object Buttongetinterfacesfromdcf_150 { get; set; }
	object Buttongetinterfacesfromdcf { get; set; }
	object Getinterfacesresult_151 { get; set; }
	object Getinterfacesresult { get; set; }
	object Propertynamegetinterfaces_152 { get; set; }
	object Propertynamegetinterfaces { get; set; }
	object Propertyvaluegetinterfaces_153 { get; set; }
	object Propertyvaluegetinterfaces { get; set; }
	object Uniquesourceconnectionssourceinterface_201 { get; set; }
	object Uniquesourceconnectionssourceinterface { get; set; }
	object Uniquesourceconnectionsdestinationinterface_202 { get; set; }
	object Uniquesourceconnectionsdestinationinterface { get; set; }
	object Buttonsaveuniquesource_210 { get; set; }
	object Buttonsaveuniquesource { get; set; }
	object Dvetablevirtualelementkey_501 { get; set; }
	object Dvetablevirtualelementkey { get; set; }
	object Dvetablevirtualelementname_502 { get; set; }
	object Dvetablevirtualelementname { get; set; }
	object Dvetablevirtualelementdestination_503 { get; set; }
	object Dvetablevirtualelementdestination { get; set; }
	object Dvetablevirtualelementcolumn_504 { get; set; }
	object Dvetablevirtualelementcolumn { get; set; }
	object Buttonsavedvedcf_510 { get; set; }
	object Buttonsavedvedcf { get; set; }
	object Allinputs_998 { get; set; }
	object Allinputs { get; set; }
	object Alloutputs_999 { get; set; }
	object Alloutputs { get; set; }
	object Mode_1050 { get; set; }
	object Inputselection_1051 { get; set; }
	object Connectionfilter_1053 { get; set; }
	object Driverinterfaces_contextmenu_1100 { get; set; }
	object Driverinterfaces_contextmenu { get; set; }
	object Driverinterfacesinterfacestate_1114 { get; set; }
	object Driverinterfacesinterfacepropertya_1115 { get; set; }
	object Driverinterfacesinterfacepropertyb_1116 { get; set; }
	object Propertynamegetinterfaces_1152 { get; set; }
	object Propertyvaluegetinterfaces_1153 { get; set; }
	object Uniquesourceconnections_contextmenu_1200 { get; set; }
	object Uniquesourceconnections_contextmenu { get; set; }
	object Uniquesourceconnectionsdestinationinterface_1202 { get; set; }
	object Dvetable_contextmenu_1500 { get; set; }
	object Dvetable_contextmenu { get; set; }
	object Dvetablevirtualelementname_1502 { get; set; }
	object Dvetablevirtualelementdestination_1503 { get; set; }
	object Matrix_2001 { get; set; }
	object Matrix { get; set; }
	object Column_2002 { get; set; }
	object Column { get; set; }
	object Discreetinfo_discreetinfo { get; set; }
	object Buttonfindinterface_2004 { get; set; }
	object Buttonfindinterface { get; set; }
	object Mapstartupelements_63993 { get; set; }
	object Mapstartupelements { get; set; }
	object Mapnewconnectionproperties_63994 { get; set; }
	object Mapnewconnectionproperties { get; set; }
	object Mapnewconnections_63995 { get; set; }
	object Mapnewconnections { get; set; }
	object Mapnewinterfaceproperties_63996 { get; set; }
	object Mapnewinterfaceproperties { get; set; }
	object Mapconnectionproperties_63997 { get; set; }
	object Mapconnectionproperties { get; set; }
	object Mapconnections_63998 { get; set; }
	object Mapconnections { get; set; }
	object Mapinterfaceproperties_63999 { get; set; }
	object Mapinterfaceproperties { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 100</summary>
	public DriverinterfacesQActionTable driverinterfaces { get; set; }
	/// <summary>PID: 200</summary>
	public UniquesourceconnectionsQActionTable uniquesourceconnections { get; set; }
	/// <summary>PID: 500</summary>
	public DvetableQActionTable dvetable { get; set; }
	/// <summary>PID: 2000</summary>
	public MatrixQActionTable matrix { get; set; }
	/// <summary>PID: 1  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Help_1 {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 1  | Type: read</summary>
	public System.Object Help {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 50  | Type: read | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mode_50 {get { return GetParameter(50); }set { SetParameter(50, value); }}
	/// <summary>PID: 50  | Type: read | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	public System.Object Mode {get { return GetParameter(50); }set { SetParameter(50, value); }}
	/// <summary>PID: 51  | Type: read | DISCREETS: Normal = 0, Crossed = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputselection_51 {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 51  | Type: read | DISCREETS: Normal = 0, Crossed = 1</summary>
	public System.Object Inputselection {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object Buttonremovevirtualaconnections_52 {get { return GetParameter(52); }set { SetParameter(52, value); }}
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object Buttonremovevirtualaconnections {get { return Write.Buttonremovevirtualaconnections; }set { Write.Buttonremovevirtualaconnections = value; }}
	/// <summary>PID: 53  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Connectionfilter_53 {get { return GetParameter(53); }set { SetParameter(53, value); }}
	/// <summary>PID: 53  | Type: read</summary>
	public System.Object Connectionfilter {get { return GetParameter(53); }set { SetParameter(53, value); }}
	/// <summary>PID: 97  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_keyinput_97 {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 97  | Type: read</summary>
	public System.Object Context_keyinput {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_key_99 {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	public System.Object Context_key {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfaceskey_111 {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	public System.Object Driverinterfaceskey {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 112  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesdescription_112 {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 112  | Type: read</summary>
	public System.Object Driverinterfacesdescription {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 113  | Type: read | DISCREETS: Virtual = 102, Input = 100, Output = 101</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacestype_113 {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 113  | Type: read | DISCREETS: Virtual = 102, Input = 100, Output = 101</summary>
	public System.Object Driverinterfacestype {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 114  | Type: read | DISCREETS: Down = 0, Up = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacestate_114 {get { return GetParameter(114); }set { SetParameter(114, value); }}
	/// <summary>PID: 114  | Type: read | DISCREETS: Down = 0, Up = 1</summary>
	public System.Object Driverinterfacesinterfacestate {get { return GetParameter(114); }set { SetParameter(114, value); }}
	/// <summary>PID: 115  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertya_115 {get { return GetParameter(115); }set { SetParameter(115, value); }}
	/// <summary>PID: 115  | Type: read</summary>
	public System.Object Driverinterfacesinterfacepropertya {get { return GetParameter(115); }set { SetParameter(115, value); }}
	/// <summary>PID: 116  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertyb_116 {get { return GetParameter(116); }set { SetParameter(116, value); }}
	/// <summary>PID: 116  | Type: read</summary>
	public System.Object Driverinterfacesinterfacepropertyb {get { return GetParameter(116); }set { SetParameter(116, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces... = Get Interfaces</summary>
	public System.Object Pagebuttongetinterfaces_149 {get { return GetParameter(149); }set { SetParameter(149, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces... = Get Interfaces</summary>
	public System.Object Pagebuttongetinterfaces {get { return Write.Pagebuttongetinterfaces; }set { Write.Pagebuttongetinterfaces = value; }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object Buttongetinterfacesfromdcf_150 {get { return GetParameter(150); }set { SetParameter(150, value); }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object Buttongetinterfacesfromdcf {get { return Write.Buttongetinterfacesfromdcf; }set { Write.Buttongetinterfacesfromdcf = value; }}
	/// <summary>PID: 151  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Getinterfacesresult_151 {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 151  | Type: read</summary>
	public System.Object Getinterfacesresult {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertynamegetinterfaces_152 {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	public System.Object Propertynamegetinterfaces {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertyvaluegetinterfaces_153 {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	public System.Object Propertyvaluegetinterfaces {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Uniquesourceconnectionssourceinterface_201 {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	public System.Object Uniquesourceconnectionssourceinterface {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Uniquesourceconnectionsdestinationinterface_202 {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	public System.Object Uniquesourceconnectionsdestinationinterface {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsaveuniquesource_210 {get { return GetParameter(210); }set { SetParameter(210, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsaveuniquesource {get { return Write.Buttonsaveuniquesource; }set { Write.Buttonsaveuniquesource = value; }}
	/// <summary>PID: 501  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementkey_501 {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 501  | Type: read</summary>
	public System.Object Dvetablevirtualelementkey {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementname_502 {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	public System.Object Dvetablevirtualelementname {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 503  | Type: read | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementdestination_503 {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 503  | Type: read | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	public System.Object Dvetablevirtualelementdestination {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementcolumn_504 {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	public System.Object Dvetablevirtualelementcolumn {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsavedvedcf_510 {get { return GetParameter(510); }set { SetParameter(510, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save to DCF = 1</summary>
	public System.Object Buttonsavedvedcf {get { return Write.Buttonsavedvedcf; }set { Write.Buttonsavedvedcf = value; }}
	/// <summary>PID: 998  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Allinputs_998 {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 998  | Type: read</summary>
	public System.Object Allinputs {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 999  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Alloutputs_999 {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 999  | Type: read</summary>
	public System.Object Alloutputs {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 1050  | Type: write | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mode_1050 {get { return GetParameter(1050); }set { SetParameter(1050, value); }}
	/// <summary>PID: 1051  | Type: write | DISCREETS: Normal = 0, Crossed = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputselection_1051 {get { return GetParameter(1051); }set { SetParameter(1051, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Connectionfilter_1053 {get { return GetParameter(1053); }set { SetParameter(1053, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object Driverinterfaces_contextmenu_1100 {get { return GetParameter(1100); }set { SetParameter(1100, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object Driverinterfaces_contextmenu {get { return Write.Driverinterfaces_contextmenu; }set { Write.Driverinterfaces_contextmenu = value; }}
	/// <summary>PID: 1114  | Type: write | DISCREETS: Down = 0, Up = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacestate_1114 {get { return GetParameter(1114); }set { SetParameter(1114, value); }}
	/// <summary>PID: 1115  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertya_1115 {get { return GetParameter(1115); }set { SetParameter(1115, value); }}
	/// <summary>PID: 1116  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertyb_1116 {get { return GetParameter(1116); }set { SetParameter(1116, value); }}
	/// <summary>PID: 1152  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertynamegetinterfaces_1152 {get { return GetParameter(1152); }set { SetParameter(1152, value); }}
	/// <summary>PID: 1153  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertyvaluegetinterfaces_1153 {get { return GetParameter(1153); }set { SetParameter(1153, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu_1200 {get { return GetParameter(1200); }set { SetParameter(1200, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu {get { return Write.Uniquesourceconnections_contextmenu; }set { Write.Uniquesourceconnections_contextmenu = value; }}
	/// <summary>PID: 1202  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Uniquesourceconnectionsdestinationinterface_1202 {get { return GetParameter(1202); }set { SetParameter(1202, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object Dvetable_contextmenu_1500 {get { return GetParameter(1500); }set { SetParameter(1500, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object Dvetable_contextmenu {get { return Write.Dvetable_contextmenu; }set { Write.Dvetable_contextmenu = value; }}
	/// <summary>PID: 1502  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementname_1502 {get { return GetParameter(1502); }set { SetParameter(1502, value); }}
	/// <summary>PID: 1503  | Type: write | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementdestination_1503 {get { return GetParameter(1503); }set { SetParameter(1503, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix {get { return Write.Matrix; }set { Write.Matrix = value; }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Column_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Column {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: discreet info</summary>
	public System.Object Discreetinfo_discreetinfo {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Log Matrix Interface = Find</summary>
	public System.Object Buttonfindinterface_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Log Matrix Interface = Find</summary>
	public System.Object Buttonfindinterface {get { return Write.Buttonfindinterface; }set { Write.Buttonfindinterface = value; }}
	/// <summary>PID: 63993  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapstartupelements_63993 {get { return GetParameter(63993); }set { SetParameter(63993, value); }}
	/// <summary>PID: 63993  | Type: read</summary>
	public System.Object Mapstartupelements {get { return GetParameter(63993); }set { SetParameter(63993, value); }}
	/// <summary>PID: 63994  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapnewconnectionproperties_63994 {get { return GetParameter(63994); }set { SetParameter(63994, value); }}
	/// <summary>PID: 63994  | Type: read</summary>
	public System.Object Mapnewconnectionproperties {get { return GetParameter(63994); }set { SetParameter(63994, value); }}
	/// <summary>PID: 63995  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapnewconnections_63995 {get { return GetParameter(63995); }set { SetParameter(63995, value); }}
	/// <summary>PID: 63995  | Type: read</summary>
	public System.Object Mapnewconnections {get { return GetParameter(63995); }set { SetParameter(63995, value); }}
	/// <summary>PID: 63996  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapnewinterfaceproperties_63996 {get { return GetParameter(63996); }set { SetParameter(63996, value); }}
	/// <summary>PID: 63996  | Type: read</summary>
	public System.Object Mapnewinterfaceproperties {get { return GetParameter(63996); }set { SetParameter(63996, value); }}
	/// <summary>PID: 63997  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapconnectionproperties_63997 {get { return GetParameter(63997); }set { SetParameter(63997, value); }}
	/// <summary>PID: 63997  | Type: read</summary>
	public System.Object Mapconnectionproperties {get { return GetParameter(63997); }set { SetParameter(63997, value); }}
	/// <summary>PID: 63998  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapconnections_63998 {get { return GetParameter(63998); }set { SetParameter(63998, value); }}
	/// <summary>PID: 63998  | Type: read</summary>
	public System.Object Mapconnections {get { return GetParameter(63998); }set { SetParameter(63998, value); }}
	/// <summary>PID: 63999  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mapinterfaceproperties_63999 {get { return GetParameter(63999); }set { SetParameter(63999, value); }}
	/// <summary>PID: 63999  | Type: read</summary>
	public System.Object Mapinterfaceproperties {get { return GetParameter(63999); }set { SetParameter(63999, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		driverinterfaces = new DriverinterfacesQActionTable(this, 100, "driverinterfaces");
		uniquesourceconnections = new UniquesourceconnectionsQActionTable(this, 200, "uniquesourceconnections");
		dvetable = new DvetableQActionTable(this, 500, "dvetable");
		matrix = new MatrixQActionTable(this, 2000, "matrix");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class DriverinterfacesQActionTable : QActionTable, IEnumerable<DriverinterfacesQActionRow>
{
	public DriverinterfacesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DriverinterfacesQActionRow> GetEnumerator() { return new QActionTableEnumerator<DriverinterfacesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class UniquesourceconnectionsQActionTable : QActionTable, IEnumerable<UniquesourceconnectionsQActionRow>
{
	public UniquesourceconnectionsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<UniquesourceconnectionsQActionRow> GetEnumerator() { return new QActionTableEnumerator<UniquesourceconnectionsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DvetableQActionTable : QActionTable, IEnumerable<DvetableQActionRow>
{
	public DvetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DvetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<DvetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MatrixQActionTable : QActionTable, IEnumerable<MatrixQActionRow>
{
	public MatrixQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MatrixQActionRow> GetEnumerator() { return new QActionTableEnumerator<MatrixQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DriverinterfacesQActionRow : QActionTableRow
{
	/// <summary>PID: 111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfaceskey_111 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 111 | Type: read</summary>
	public System.Object Driverinterfaceskey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesdescription_112 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	public System.Object Driverinterfacesdescription { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacestype_113 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	public System.Object Driverinterfacestype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacestate_114 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 114 | Type: read</summary>
	public System.Object Driverinterfacesinterfacestate { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 115 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertya_115 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 115 | Type: read</summary>
	public System.Object Driverinterfacesinterfacepropertya { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 116 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Driverinterfacesinterfacepropertyb_116 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 116 | Type: read</summary>
	public System.Object Driverinterfacesinterfacepropertyb { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public DriverinterfacesQActionRow() : base(0, 6) { }
	public DriverinterfacesQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator DriverinterfacesQActionRow(System.Object[] source) { return new DriverinterfacesQActionRow(source); }
	public static implicit operator System.Object[](DriverinterfacesQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class UniquesourceconnectionsQActionRow : QActionTableRow
{
	/// <summary>PID: 201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Uniquesourceconnectionssourceinterface_201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 201 | Type: read</summary>
	public System.Object Uniquesourceconnectionssourceinterface { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Uniquesourceconnectionsdestinationinterface_202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 202 | Type: read</summary>
	public System.Object Uniquesourceconnectionsdestinationinterface { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public UniquesourceconnectionsQActionRow() : base(0, 2) { }
	public UniquesourceconnectionsQActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator UniquesourceconnectionsQActionRow(System.Object[] source) { return new UniquesourceconnectionsQActionRow(source); }
	public static implicit operator System.Object[](UniquesourceconnectionsQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class DvetableQActionRow : QActionTableRow
{
	/// <summary>PID: 501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementkey_501 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 501 | Type: read</summary>
	public System.Object Dvetablevirtualelementkey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementname_502 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	public System.Object Dvetablevirtualelementname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementdestination_503 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	public System.Object Dvetablevirtualelementdestination { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dvetablevirtualelementcolumn_504 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	public System.Object Dvetablevirtualelementcolumn { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public DvetableQActionRow() : base(0, 4) { }
	public DvetableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator DvetableQActionRow(System.Object[] source) { return new DvetableQActionRow(source); }
	public static implicit operator System.Object[](DvetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MatrixQActionRow : QActionTableRow
{
	public MatrixQActionRow() : base(0, 0) { }
	public MatrixQActionRow(System.Object[] oRow) : base(0, 0, oRow) { }
	public static implicit operator MatrixQActionRow(System.Object[] source) { return new MatrixQActionRow(source); }
	public static implicit operator System.Object[](MatrixQActionRow source) { return source.ToObjectArray(); }
}
}
