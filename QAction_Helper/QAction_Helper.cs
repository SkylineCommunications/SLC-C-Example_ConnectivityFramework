// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 1 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int help_1 = 1;
	/// <summary>PID: 1 | Type: read</summary>
	public const int help = 1;
	/// <summary>PID: 50 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mode_50 = 50;
	/// <summary>PID: 50 | Type: read</summary>
	public const int mode = 50;
	/// <summary>PID: 51 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int inputSelection_51 = 51;
	/// <summary>PID: 51 | Type: read</summary>
	public const int inputSelection = 51;
	/// <summary>PID: 53 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int connectionFilter_53 = 53;
	/// <summary>PID: 53 | Type: read</summary>
	public const int connectionFilter = 53;
	/// <summary>PID: 96 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_keyoutput_96 = 96;
	/// <summary>PID: 96 | Type: read</summary>
	public const int context_keyoutput = 96;
	/// <summary>PID: 97 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_keyinput_97 = 97;
	/// <summary>PID: 97 | Type: read</summary>
	public const int context_keyinput = 97;
	/// <summary>PID: 98 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_cmtsName_98 = 98;
	/// <summary>PID: 98 | Type: read</summary>
	public const int context_cmtsName = 98;
	/// <summary>PID: 99 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int context_key_99 = 99;
	/// <summary>PID: 99 | Type: read</summary>
	public const int context_key = 99;
	/// <summary>PID: 151 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int getInterfacesResult_151 = 151;
	/// <summary>PID: 151 | Type: read</summary>
	public const int getInterfacesResult = 151;
	/// <summary>PID: 152 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int propertynamegetinterfaces_152 = 152;
	/// <summary>PID: 152 | Type: read</summary>
	public const int propertynamegetinterfaces = 152;
	/// <summary>PID: 153 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int propertyvaluegetinterfaces_153 = 153;
	/// <summary>PID: 153 | Type: read</summary>
	public const int propertyvaluegetinterfaces = 153;
	/// <summary>PID: 998 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int allinputs_998 = 998;
	/// <summary>PID: 998 | Type: read</summary>
	public const int allinputs = 998;
	/// <summary>PID: 999 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int alloutputs_999 = 999;
	/// <summary>PID: 999 | Type: read</summary>
	public const int alloutputs = 999;
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int column_2002 = 2002;
	/// <summary>PID: 2002 | Type: read</summary>
	public const int column = 2002;
	/// <summary>PID: 63993 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_startupelements_63993 = 63993;
	/// <summary>PID: 63993 | Type: read</summary>
	public const int map_startupelements = 63993;
	/// <summary>PID: 63994 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_newconnectionproperties_63994 = 63994;
	/// <summary>PID: 63994 | Type: read</summary>
	public const int map_newconnectionproperties = 63994;
	/// <summary>PID: 63995 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_newconnections_63995 = 63995;
	/// <summary>PID: 63995 | Type: read</summary>
	public const int map_newconnections = 63995;
	/// <summary>PID: 63996 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_newinterfaceproperties_63996 = 63996;
	/// <summary>PID: 63996 | Type: read</summary>
	public const int map_newinterfaceproperties = 63996;
	/// <summary>PID: 63997 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_connectionproperties_63997 = 63997;
	/// <summary>PID: 63997 | Type: read</summary>
	public const int map_connectionproperties = 63997;
	/// <summary>PID: 63998 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_connections_63998 = 63998;
	/// <summary>PID: 63998 | Type: read</summary>
	public const int map_connections = 63998;
	/// <summary>PID: 63999 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int map_interfaceproperties_63999 = 63999;
	/// <summary>PID: 63999 | Type: read</summary>
	public const int map_interfaceproperties = 63999;
	public class Write
	{
		/// <summary>PID: 52 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int but_removevirtualaconnections_52 = 52;
		/// <summary>PID: 52 | Type: write</summary>
		public const int but_removevirtualaconnections = 52;
		/// <summary>PID: 149 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pb_getinterfaces_149 = 149;
		/// <summary>PID: 149 | Type: write</summary>
		public const int pb_getinterfaces = 149;
		/// <summary>PID: 150 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int but_getinterfacesfromdcf_150 = 150;
		/// <summary>PID: 150 | Type: write</summary>
		public const int but_getinterfacesfromdcf = 150;
		/// <summary>PID: 210 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int but_saveuniquesource_210 = 210;
		/// <summary>PID: 210 | Type: write</summary>
		public const int but_saveuniquesource = 210;
		/// <summary>PID: 510 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int but_savedvedcf_510 = 510;
		/// <summary>PID: 510 | Type: write</summary>
		public const int but_savedvedcf = 510;
		/// <summary>PID: 1050 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mode_1050 = 1050;
		/// <summary>PID: 1050 | Type: write</summary>
		public const int mode = 1050;
		/// <summary>PID: 1051 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int inputSelection_1051 = 1051;
		/// <summary>PID: 1051 | Type: write</summary>
		public const int inputSelection = 1051;
		/// <summary>PID: 1053 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int connectionFilter_1053 = 1053;
		/// <summary>PID: 1053 | Type: write</summary>
		public const int connectionFilter = 1053;
		/// <summary>PID: 1100 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int driverInterfaces_ContextMenu_1100 = 1100;
		/// <summary>PID: 1100 | Type: write</summary>
		public const int driverInterfaces_ContextMenu = 1100;
		/// <summary>PID: 1114 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int difInterfaceState_1114 = 1114;
		/// <summary>PID: 1114 | Type: write</summary>
		public const int difInterfaceState = 1114;
		/// <summary>PID: 1115 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int interfacePropertyA_1115 = 1115;
		/// <summary>PID: 1115 | Type: write</summary>
		public const int interfacePropertyA = 1115;
		/// <summary>PID: 1116 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int interfacePropertyB_1116 = 1116;
		/// <summary>PID: 1116 | Type: write</summary>
		public const int interfacePropertyB = 1116;
		/// <summary>PID: 1152 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int propertynamegetinterfaces_1152 = 1152;
		/// <summary>PID: 1152 | Type: write</summary>
		public const int propertynamegetinterfaces = 1152;
		/// <summary>PID: 1153 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int propertyvaluegetinterfaces_1153 = 1153;
		/// <summary>PID: 1153 | Type: write</summary>
		public const int propertyvaluegetinterfaces = 1153;
		/// <summary>PID: 1200 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int uniquesourceconnections_contextmenu_1200 = 1200;
		/// <summary>PID: 1200 | Type: write</summary>
		public const int uniquesourceconnections_contextmenu = 1200;
		/// <summary>PID: 1202 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int usDestinationInterface_1202 = 1202;
		/// <summary>PID: 1202 | Type: write</summary>
		public const int usDestinationInterface = 1202;
		/// <summary>PID: 1500 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dveTable_ContextMenu_1500 = 1500;
		/// <summary>PID: 1500 | Type: write</summary>
		public const int dveTable_ContextMenu = 1500;
		/// <summary>PID: 1502 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int virtualElementName_1502 = 1502;
		/// <summary>PID: 1502 | Type: write</summary>
		public const int virtualElementName = 1502;
		/// <summary>PID: 1503 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int virtualElementDestination_1503 = 1503;
		/// <summary>PID: 1503 | Type: write</summary>
		public const int virtualElementDestination = 1503;
		/// <summary>PID: 2001 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int matrix_2001 = 2001;
		/// <summary>PID: 2001 | Type: write</summary>
		public const int matrix = 2001;
		/// <summary>PID: 2004 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int but_findinterface_2004 = 2004;
		/// <summary>PID: 2004 | Type: write</summary>
		public const int but_findinterface = 2004;
	}
	public class DriverInterfaces
	{
		/// <summary>PID: 100</summary>
		public const int tablePid = 100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 111</summary>
		public const int indexColumnPid = 111;
		public class Pid
		{
			/// <summary>PID: 111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difKey_111 = 111;
			/// <summary>PID: 111 | Type: read</summary>
			public const int difKey = 111;
			/// <summary>PID: 112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difDescriptionIDX_112 = 112;
			/// <summary>PID: 112 | Type: read</summary>
			public const int difDescriptionIDX = 112;
			/// <summary>PID: 113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difType_113 = 113;
			/// <summary>PID: 113 | Type: read</summary>
			public const int difType = 113;
			/// <summary>PID: 114 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difInterfaceState_114 = 114;
			/// <summary>PID: 114 | Type: read</summary>
			public const int difInterfaceState = 114;
			/// <summary>PID: 115 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacePropertyA_115 = 115;
			/// <summary>PID: 115 | Type: read</summary>
			public const int interfacePropertyA = 115;
			/// <summary>PID: 116 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacePropertyB_116 = 116;
			/// <summary>PID: 116 | Type: read</summary>
			public const int interfacePropertyB = 116;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difKey_111 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int difKey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difDescriptionIDX_112 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int difDescriptionIDX = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difType_113 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int difType = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int difInterfaceState_114 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int difInterfaceState = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacePropertyA_115 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int interfacePropertyA = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacePropertyB_116 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int interfacePropertyB = 5;
		}
	}
	public class Uniquesourceconnections
	{
		/// <summary>PID: 200</summary>
		public const int tablePid = 200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 201</summary>
		public const int indexColumnPid = 201;
		public class Pid
		{
			/// <summary>PID: 201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int usSourceInterface_201 = 201;
			/// <summary>PID: 201 | Type: read</summary>
			public const int usSourceInterface = 201;
			/// <summary>PID: 202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int usDestinationInterface_202 = 202;
			/// <summary>PID: 202 | Type: read</summary>
			public const int usDestinationInterface = 202;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int usSourceInterface_201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int usSourceInterface = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int usDestinationInterface_202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int usDestinationInterface = 1;
		}
	}
	public class DveTable
	{
		/// <summary>PID: 500</summary>
		public const int tablePid = 500;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 501</summary>
		public const int indexColumnPid = 501;
		public class Pid
		{
			/// <summary>PID: 501 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementKey_501 = 501;
			/// <summary>PID: 501 | Type: read</summary>
			public const int virtualElementKey = 501;
			/// <summary>PID: 502 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementName_502 = 502;
			/// <summary>PID: 502 | Type: read</summary>
			public const int virtualElementName = 502;
			/// <summary>PID: 503 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementDestination_503 = 503;
			/// <summary>PID: 503 | Type: read</summary>
			public const int virtualElementDestination = 503;
			/// <summary>PID: 504 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementEleColumn_504 = 504;
			/// <summary>PID: 504 | Type: read</summary>
			public const int virtualElementEleColumn = 504;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementKey_501 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int virtualElementKey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementName_502 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int virtualElementName = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementDestination_503 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int virtualElementDestination = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualElementEleColumn_504 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int virtualElementEleColumn = 3;
		}
	}
	public class Matrix
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		public class Pid
		{
			public class Write
			{
			}
		}
		public class Idx
		{
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object But_removevirtualaconnections {get { return Protocol.GetParameter(52); }set { Protocol.SetParameter(52, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces ... = Get Interfaces</summary>
	public System.Object Pb_getinterfaces {get { return Protocol.GetParameter(149); }set { Protocol.SetParameter(149, value); }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object But_getinterfacesfromdcf {get { return Protocol.GetParameter(150); }set { Protocol.SetParameter(150, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_saveuniquesource {get { return Protocol.GetParameter(210); }set { Protocol.SetParameter(210, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_savedvedcf {get { return Protocol.GetParameter(510); }set { Protocol.SetParameter(510, value); }}
	/// <summary>PID: 1050  | Type: write | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	public System.Object Mode {get { return Protocol.GetParameter(1050); }set { Protocol.SetParameter(1050, value); }}
	/// <summary>PID: 1051  | Type: write | DISCREETS: Normal = 0, Crossed = 1</summary>
	public System.Object InputSelection {get { return Protocol.GetParameter(1051); }set { Protocol.SetParameter(1051, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	public System.Object ConnectionFilter {get { return Protocol.GetParameter(1053); }set { Protocol.SetParameter(1053, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object DriverInterfaces_ContextMenu {get { return Protocol.GetParameter(1100); }set { Protocol.SetParameter(1100, value); }}
	/// <summary>PID: 1114  | Type: write | DISCREETS: DOWN = 0, UP = 1</summary>
	public System.Object DifInterfaceState {get { return Protocol.GetParameter(1114); }set { Protocol.SetParameter(1114, value); }}
	/// <summary>PID: 1115  | Type: write</summary>
	public System.Object InterfacePropertyA {get { return Protocol.GetParameter(1115); }set { Protocol.SetParameter(1115, value); }}
	/// <summary>PID: 1116  | Type: write</summary>
	public System.Object InterfacePropertyB {get { return Protocol.GetParameter(1116); }set { Protocol.SetParameter(1116, value); }}
	/// <summary>PID: 1152  | Type: write</summary>
	public System.Object Propertynamegetinterfaces {get { return Protocol.GetParameter(1152); }set { Protocol.SetParameter(1152, value); }}
	/// <summary>PID: 1153  | Type: write</summary>
	public System.Object Propertyvaluegetinterfaces {get { return Protocol.GetParameter(1153); }set { Protocol.SetParameter(1153, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu {get { return Protocol.GetParameter(1200); }set { Protocol.SetParameter(1200, value); }}
	/// <summary>PID: 1202  | Type: write</summary>
	public System.Object UsDestinationInterface {get { return Protocol.GetParameter(1202); }set { Protocol.SetParameter(1202, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add ... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object DveTable_ContextMenu {get { return Protocol.GetParameter(1500); }set { Protocol.SetParameter(1500, value); }}
	/// <summary>PID: 1502  | Type: write</summary>
	public System.Object VirtualElementName {get { return Protocol.GetParameter(1502); }set { Protocol.SetParameter(1502, value); }}
	/// <summary>PID: 1503  | Type: write | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	public System.Object VirtualElementDestination {get { return Protocol.GetParameter(1503); }set { Protocol.SetParameter(1503, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix {get { return Protocol.GetParameter(2001); }set { Protocol.SetParameter(2001, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Find Matrix Interface = Find</summary>
	public System.Object But_findinterface {get { return Protocol.GetParameter(2004); }set { Protocol.SetParameter(2004, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 100</summary>
	DriverInterfacesQActionTable driverInterfaces { get; set; }
	/// <summary>PID: 200</summary>
	UniquesourceconnectionsQActionTable uniquesourceconnections { get; set; }
	/// <summary>PID: 500</summary>
	DveTableQActionTable dveTable { get; set; }
	/// <summary>PID: 2000</summary>
	MatrixQActionTable matrix { get; set; }
	object Help_1 { get; set; }
	object Help { get; set; }
	object Qa_afterstartup_dummy { get; set; }
	object Mode_50 { get; set; }
	object Mode { get; set; }
	object InputSelection_51 { get; set; }
	object InputSelection { get; set; }
	object But_removevirtualaconnections_52 { get; set; }
	object But_removevirtualaconnections { get; set; }
	object ConnectionFilter_53 { get; set; }
	object ConnectionFilter { get; set; }
	object Context_keyoutput_96 { get; set; }
	object Context_keyoutput { get; set; }
	object Context_keyinput_97 { get; set; }
	object Context_keyinput { get; set; }
	object Context_cmtsName_98 { get; set; }
	object Context_cmtsName { get; set; }
	object Context_key_99 { get; set; }
	object Context_key { get; set; }
	object DifKey_111 { get; set; }
	object DifKey { get; set; }
	object DifDescriptionIDX_112 { get; set; }
	object DifDescriptionIDX { get; set; }
	object DifType_113 { get; set; }
	object DifType { get; set; }
	object DifInterfaceState_114 { get; set; }
	object DifInterfaceState { get; set; }
	object InterfacePropertyA_115 { get; set; }
	object InterfacePropertyA { get; set; }
	object InterfacePropertyB_116 { get; set; }
	object InterfacePropertyB { get; set; }
	object Pb_getinterfaces_149 { get; set; }
	object Pb_getinterfaces { get; set; }
	object But_getinterfacesfromdcf_150 { get; set; }
	object But_getinterfacesfromdcf { get; set; }
	object GetInterfacesResult_151 { get; set; }
	object GetInterfacesResult { get; set; }
	object Propertynamegetinterfaces_152 { get; set; }
	object Propertynamegetinterfaces { get; set; }
	object Propertyvaluegetinterfaces_153 { get; set; }
	object Propertyvaluegetinterfaces { get; set; }
	object UsSourceInterface_201 { get; set; }
	object UsSourceInterface { get; set; }
	object UsDestinationInterface_202 { get; set; }
	object UsDestinationInterface { get; set; }
	object But_saveuniquesource_210 { get; set; }
	object But_saveuniquesource { get; set; }
	object VirtualElementKey_501 { get; set; }
	object VirtualElementKey { get; set; }
	object VirtualElementName_502 { get; set; }
	object VirtualElementName { get; set; }
	object VirtualElementDestination_503 { get; set; }
	object VirtualElementDestination { get; set; }
	object VirtualElementEleColumn_504 { get; set; }
	object VirtualElementEleColumn { get; set; }
	object But_savedvedcf_510 { get; set; }
	object But_savedvedcf { get; set; }
	object Allinputs_998 { get; set; }
	object Allinputs { get; set; }
	object Alloutputs_999 { get; set; }
	object Alloutputs { get; set; }
	object Mode_1050 { get; set; }
	object InputSelection_1051 { get; set; }
	object ConnectionFilter_1053 { get; set; }
	object DriverInterfaces_ContextMenu_1100 { get; set; }
	object DriverInterfaces_ContextMenu { get; set; }
	object DifInterfaceState_1114 { get; set; }
	object InterfacePropertyA_1115 { get; set; }
	object InterfacePropertyB_1116 { get; set; }
	object Propertynamegetinterfaces_1152 { get; set; }
	object Propertyvaluegetinterfaces_1153 { get; set; }
	object Uniquesourceconnections_contextmenu_1200 { get; set; }
	object Uniquesourceconnections_contextmenu { get; set; }
	object UsDestinationInterface_1202 { get; set; }
	object DveTable_ContextMenu_1500 { get; set; }
	object DveTable_ContextMenu { get; set; }
	object VirtualElementName_1502 { get; set; }
	object VirtualElementDestination_1503 { get; set; }
	object Matrix_2001 { get; set; }
	object Matrix { get; set; }
	object Column_2002 { get; set; }
	object Column { get; set; }
	object DiscreetInfo_discreetinfo { get; set; }
	object But_findinterface_2004 { get; set; }
	object But_findinterface { get; set; }
	object Map_startupelements_63993 { get; set; }
	object Map_startupelements { get; set; }
	object Map_newconnectionproperties_63994 { get; set; }
	object Map_newconnectionproperties { get; set; }
	object Map_newconnections_63995 { get; set; }
	object Map_newconnections { get; set; }
	object Map_newinterfaceproperties_63996 { get; set; }
	object Map_newinterfaceproperties { get; set; }
	object Map_connectionproperties_63997 { get; set; }
	object Map_connectionproperties { get; set; }
	object Map_connections_63998 { get; set; }
	object Map_connections { get; set; }
	object Map_interfaceproperties_63999 { get; set; }
	object Map_interfaceproperties { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 100</summary>
	public DriverInterfacesQActionTable driverInterfaces { get; set; }
	/// <summary>PID: 200</summary>
	public UniquesourceconnectionsQActionTable uniquesourceconnections { get; set; }
	/// <summary>PID: 500</summary>
	public DveTableQActionTable dveTable { get; set; }
	/// <summary>PID: 2000</summary>
	public MatrixQActionTable matrix { get; set; }
	/// <summary>PID: 1  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Help_1 {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 1  | Type: read</summary>
	public System.Object Help {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Qa_afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 50  | Type: read | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mode_50 {get { return GetParameter(50); }set { SetParameter(50, value); }}
	/// <summary>PID: 50  | Type: read | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	public System.Object Mode {get { return GetParameter(50); }set { SetParameter(50, value); }}
	/// <summary>PID: 51  | Type: read | DISCREETS: Normal = 0, Crossed = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InputSelection_51 {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 51  | Type: read | DISCREETS: Normal = 0, Crossed = 1</summary>
	public System.Object InputSelection {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object But_removevirtualaconnections_52 {get { return GetParameter(52); }set { SetParameter(52, value); }}
	/// <summary>PID: 52  | Type: write | DISCREETS: Remove Virtual A Connection = 1</summary>
	public System.Object But_removevirtualaconnections {get { return Write.But_removevirtualaconnections; }set { Write.But_removevirtualaconnections = value; }}
	/// <summary>PID: 53  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ConnectionFilter_53 {get { return GetParameter(53); }set { SetParameter(53, value); }}
	/// <summary>PID: 53  | Type: read</summary>
	public System.Object ConnectionFilter {get { return GetParameter(53); }set { SetParameter(53, value); }}
	/// <summary>PID: 96  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_keyoutput_96 {get { return GetParameter(96); }set { SetParameter(96, value); }}
	/// <summary>PID: 96  | Type: read</summary>
	public System.Object Context_keyoutput {get { return GetParameter(96); }set { SetParameter(96, value); }}
	/// <summary>PID: 97  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_keyinput_97 {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 97  | Type: read</summary>
	public System.Object Context_keyinput {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 98  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_cmtsName_98 {get { return GetParameter(98); }set { SetParameter(98, value); }}
	/// <summary>PID: 98  | Type: read</summary>
	public System.Object Context_cmtsName {get { return GetParameter(98); }set { SetParameter(98, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Context_key_99 {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	public System.Object Context_key {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifKey_111 {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	public System.Object DifKey {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 112  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifDescriptionIDX_112 {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 112  | Type: read</summary>
	public System.Object DifDescriptionIDX {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 113  | Type: read | DISCREETS: Virtual = 102, Input = 100, Output = 101</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifType_113 {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 113  | Type: read | DISCREETS: Virtual = 102, Input = 100, Output = 101</summary>
	public System.Object DifType {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 114  | Type: read | DISCREETS: DOWN = 0, UP = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifInterfaceState_114 {get { return GetParameter(114); }set { SetParameter(114, value); }}
	/// <summary>PID: 114  | Type: read | DISCREETS: DOWN = 0, UP = 1</summary>
	public System.Object DifInterfaceState {get { return GetParameter(114); }set { SetParameter(114, value); }}
	/// <summary>PID: 115  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyA_115 {get { return GetParameter(115); }set { SetParameter(115, value); }}
	/// <summary>PID: 115  | Type: read</summary>
	public System.Object InterfacePropertyA {get { return GetParameter(115); }set { SetParameter(115, value); }}
	/// <summary>PID: 116  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyB_116 {get { return GetParameter(116); }set { SetParameter(116, value); }}
	/// <summary>PID: 116  | Type: read</summary>
	public System.Object InterfacePropertyB {get { return GetParameter(116); }set { SetParameter(116, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces ... = Get Interfaces</summary>
	public System.Object Pb_getinterfaces_149 {get { return GetParameter(149); }set { SetParameter(149, value); }}
	/// <summary>PID: 149  | Type: write | DISCREETS: Get Interfaces ... = Get Interfaces</summary>
	public System.Object Pb_getinterfaces {get { return Write.Pb_getinterfaces; }set { Write.Pb_getinterfaces = value; }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object But_getinterfacesfromdcf_150 {get { return GetParameter(150); }set { SetParameter(150, value); }}
	/// <summary>PID: 150  | Type: write | DISCREETS: Get Interfaces (DCF Data) = 1</summary>
	public System.Object But_getinterfacesfromdcf {get { return Write.But_getinterfacesfromdcf; }set { Write.But_getinterfacesfromdcf = value; }}
	/// <summary>PID: 151  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object GetInterfacesResult_151 {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 151  | Type: read</summary>
	public System.Object GetInterfacesResult {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertynamegetinterfaces_152 {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	public System.Object Propertynamegetinterfaces {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertyvaluegetinterfaces_153 {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	public System.Object Propertyvaluegetinterfaces {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UsSourceInterface_201 {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	public System.Object UsSourceInterface {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UsDestinationInterface_202 {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 202  | Type: read</summary>
	public System.Object UsDestinationInterface {get { return GetParameter(202); }set { SetParameter(202, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_saveuniquesource_210 {get { return GetParameter(210); }set { SetParameter(210, value); }}
	/// <summary>PID: 210  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_saveuniquesource {get { return Write.But_saveuniquesource; }set { Write.But_saveuniquesource = value; }}
	/// <summary>PID: 501  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementKey_501 {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 501  | Type: read</summary>
	public System.Object VirtualElementKey {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementName_502 {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	public System.Object VirtualElementName {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 503  | Type: read | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementDestination_503 {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 503  | Type: read | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	public System.Object VirtualElementDestination {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementEleColumn_504 {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	public System.Object VirtualElementEleColumn {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_savedvedcf_510 {get { return GetParameter(510); }set { SetParameter(510, value); }}
	/// <summary>PID: 510  | Type: write | DISCREETS: Save To DCF = 1</summary>
	public System.Object But_savedvedcf {get { return Write.But_savedvedcf; }set { Write.But_savedvedcf = value; }}
	/// <summary>PID: 998  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Allinputs_998 {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 998  | Type: read</summary>
	public System.Object Allinputs {get { return GetParameter(998); }set { SetParameter(998, value); }}
	/// <summary>PID: 999  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Alloutputs_999 {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 999  | Type: read</summary>
	public System.Object Alloutputs {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 1050  | Type: write | DISCREETS: 1-Channel = 0, 2-Channel = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mode_1050 {get { return GetParameter(1050); }set { SetParameter(1050, value); }}
	/// <summary>PID: 1051  | Type: write | DISCREETS: Normal = 0, Crossed = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InputSelection_1051 {get { return GetParameter(1051); }set { SetParameter(1051, value); }}
	/// <summary>PID: 1053  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ConnectionFilter_1053 {get { return GetParameter(1053); }set { SetParameter(1053, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object DriverInterfaces_ContextMenu_1100 {get { return GetParameter(1100); }set { SetParameter(1100, value); }}
	/// <summary>PID: 1100  | Type: write | DISCREETS: Add Input... = add inp, Add Output... = add out, Add Virtual... = add virt, Delete Selected = delete Int, Clear Table = clear Int</summary>
	public System.Object DriverInterfaces_ContextMenu {get { return Write.DriverInterfaces_ContextMenu; }set { Write.DriverInterfaces_ContextMenu = value; }}
	/// <summary>PID: 1114  | Type: write | DISCREETS: DOWN = 0, UP = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifInterfaceState_1114 {get { return GetParameter(1114); }set { SetParameter(1114, value); }}
	/// <summary>PID: 1115  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyA_1115 {get { return GetParameter(1115); }set { SetParameter(1115, value); }}
	/// <summary>PID: 1116  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyB_1116 {get { return GetParameter(1116); }set { SetParameter(1116, value); }}
	/// <summary>PID: 1152  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertynamegetinterfaces_1152 {get { return GetParameter(1152); }set { SetParameter(1152, value); }}
	/// <summary>PID: 1153  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Propertyvaluegetinterfaces_1153 {get { return GetParameter(1153); }set { SetParameter(1153, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu_1200 {get { return GetParameter(1200); }set { SetParameter(1200, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Add ... = add connection, Delete Selected = delete connection, Clear Table = clear</summary>
	public System.Object Uniquesourceconnections_contextmenu {get { return Write.Uniquesourceconnections_contextmenu; }set { Write.Uniquesourceconnections_contextmenu = value; }}
	/// <summary>PID: 1202  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UsDestinationInterface_1202 {get { return GetParameter(1202); }set { SetParameter(1202, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add ... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object DveTable_ContextMenu_1500 {get { return GetParameter(1500); }set { SetParameter(1500, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Add ... = add dve, Delete Selected = delete, Clear Table = clear</summary>
	public System.Object DveTable_ContextMenu {get { return Write.DveTable_ContextMenu; }set { Write.DveTable_ContextMenu = value; }}
	/// <summary>PID: 1502  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementName_1502 {get { return GetParameter(1502); }set { SetParameter(1502, value); }}
	/// <summary>PID: 1503  | Type: write | DISCREETS: Output Port 2/1 = 0, Output Port 2/2 = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementDestination_1503 {get { return GetParameter(1503); }set { SetParameter(1503, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: write</summary>
	public System.Object Matrix {get { return Write.Matrix; }set { Write.Matrix = value; }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Column_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Column {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: discreet info</summary>
	public System.Object DiscreetInfo_discreetinfo {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Find Matrix Interface = Find</summary>
	public System.Object But_findinterface_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: write | DISCREETS: Find Matrix Interface = Find</summary>
	public System.Object But_findinterface {get { return Write.But_findinterface; }set { Write.But_findinterface = value; }}
	/// <summary>PID: 63993  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_startupelements_63993 {get { return GetParameter(63993); }set { SetParameter(63993, value); }}
	/// <summary>PID: 63993  | Type: read</summary>
	public System.Object Map_startupelements {get { return GetParameter(63993); }set { SetParameter(63993, value); }}
	/// <summary>PID: 63994  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_newconnectionproperties_63994 {get { return GetParameter(63994); }set { SetParameter(63994, value); }}
	/// <summary>PID: 63994  | Type: read</summary>
	public System.Object Map_newconnectionproperties {get { return GetParameter(63994); }set { SetParameter(63994, value); }}
	/// <summary>PID: 63995  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_newconnections_63995 {get { return GetParameter(63995); }set { SetParameter(63995, value); }}
	/// <summary>PID: 63995  | Type: read</summary>
	public System.Object Map_newconnections {get { return GetParameter(63995); }set { SetParameter(63995, value); }}
	/// <summary>PID: 63996  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_newinterfaceproperties_63996 {get { return GetParameter(63996); }set { SetParameter(63996, value); }}
	/// <summary>PID: 63996  | Type: read</summary>
	public System.Object Map_newinterfaceproperties {get { return GetParameter(63996); }set { SetParameter(63996, value); }}
	/// <summary>PID: 63997  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_connectionproperties_63997 {get { return GetParameter(63997); }set { SetParameter(63997, value); }}
	/// <summary>PID: 63997  | Type: read</summary>
	public System.Object Map_connectionproperties {get { return GetParameter(63997); }set { SetParameter(63997, value); }}
	/// <summary>PID: 63998  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_connections_63998 {get { return GetParameter(63998); }set { SetParameter(63998, value); }}
	/// <summary>PID: 63998  | Type: read</summary>
	public System.Object Map_connections {get { return GetParameter(63998); }set { SetParameter(63998, value); }}
	/// <summary>PID: 63999  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Map_interfaceproperties_63999 {get { return GetParameter(63999); }set { SetParameter(63999, value); }}
	/// <summary>PID: 63999  | Type: read</summary>
	public System.Object Map_interfaceproperties {get { return GetParameter(63999); }set { SetParameter(63999, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		driverInterfaces = new DriverInterfacesQActionTable(this, 100, "driverInterfaces");
		uniquesourceconnections = new UniquesourceconnectionsQActionTable(this, 200, "uniquesourceconnections");
		dveTable = new DveTableQActionTable(this, 500, "dveTable");
		matrix = new MatrixQActionTable(this, 2000, "matrix");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class DriverInterfacesQActionTable : QActionTable, IEnumerable<DriverInterfacesQActionRow>
{
	public DriverInterfacesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DriverInterfacesQActionRow> GetEnumerator() { return new QActionTableEnumerator<DriverInterfacesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class UniquesourceconnectionsQActionTable : QActionTable, IEnumerable<UniquesourceconnectionsQActionRow>
{
	public UniquesourceconnectionsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<UniquesourceconnectionsQActionRow> GetEnumerator() { return new QActionTableEnumerator<UniquesourceconnectionsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DveTableQActionTable : QActionTable, IEnumerable<DveTableQActionRow>
{
	public DveTableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DveTableQActionRow> GetEnumerator() { return new QActionTableEnumerator<DveTableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MatrixQActionTable : QActionTable, IEnumerable<MatrixQActionRow>
{
	public MatrixQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MatrixQActionRow> GetEnumerator() { return new QActionTableEnumerator<MatrixQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DriverInterfacesQActionRow : QActionTableRow
{
	/// <summary>PID: 111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifKey_111 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 111 | Type: read</summary>
	public System.Object DifKey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifDescriptionIDX_112 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	public System.Object DifDescriptionIDX { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifType_113 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	public System.Object DifType { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object DifInterfaceState_114 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 114 | Type: read</summary>
	public System.Object DifInterfaceState { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 115 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyA_115 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 115 | Type: read</summary>
	public System.Object InterfacePropertyA { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 116 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object InterfacePropertyB_116 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 116 | Type: read</summary>
	public System.Object InterfacePropertyB { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public DriverInterfacesQActionRow() : base(0, 6) { }
	public DriverInterfacesQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator DriverInterfacesQActionRow(System.Object[] source) { return new DriverInterfacesQActionRow(source); }
	public static implicit operator System.Object[](DriverInterfacesQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class UniquesourceconnectionsQActionRow : QActionTableRow
{
	/// <summary>PID: 201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UsSourceInterface_201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 201 | Type: read</summary>
	public System.Object UsSourceInterface { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UsDestinationInterface_202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 202 | Type: read</summary>
	public System.Object UsDestinationInterface { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public UniquesourceconnectionsQActionRow() : base(0, 2) { }
	public UniquesourceconnectionsQActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator UniquesourceconnectionsQActionRow(System.Object[] source) { return new UniquesourceconnectionsQActionRow(source); }
	public static implicit operator System.Object[](UniquesourceconnectionsQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class DveTableQActionRow : QActionTableRow
{
	/// <summary>PID: 501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementKey_501 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 501 | Type: read</summary>
	public System.Object VirtualElementKey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementName_502 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	public System.Object VirtualElementName { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementDestination_503 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	public System.Object VirtualElementDestination { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object VirtualElementEleColumn_504 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	public System.Object VirtualElementEleColumn { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public DveTableQActionRow() : base(0, 4) { }
	public DveTableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator DveTableQActionRow(System.Object[] source) { return new DveTableQActionRow(source); }
	public static implicit operator System.Object[](DveTableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MatrixQActionRow : QActionTableRow
{
	public MatrixQActionRow() : base(0, 0) { }
	public MatrixQActionRow(System.Object[] oRow) : base(0, 0, oRow) { }
	public static implicit operator MatrixQActionRow(System.Object[] source) { return new MatrixQActionRow(source); }
	public static implicit operator System.Object[](MatrixQActionRow source) { return source.ToObjectArray(); }
}
}
